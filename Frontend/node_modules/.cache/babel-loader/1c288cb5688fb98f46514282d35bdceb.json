{"ast":null,"code":"var _jsxFileName = \"/home/siyamak/Documents/MetaMask-Login-Python/frontend/src/components/ctx/account-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_host = \"http://localhost:8000\";\nconst AccountInfoContext = /*#__PURE__*/createContext({\n  access_token: null,\n  user_obj: null,\n  connectWallet: () => {},\n  signer: null,\n  loginCheck: () => {},\n  logout: () => {}\n});\nexport function AccountInfoContextProvider(props) {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [user_obj, setUser_obj] = useState(null);\n  const [web3signer, setWeb3signer] = useState(null);\n\n  async function login(signer) {\n    const address = await signer.getAddress(); // get nounce for this user\n\n    const meta = await axios.get(api_host + \"/user_svc/get_captcha/?web3_address=\" + address); //http://127.0.0.1:8000/user_svc/get_captcha/?web3_address=xyz\n    // ask for sign\n\n    let signature = null;\n\n    try {\n      signature = await signer.signMessage(meta.data.data.captcha);\n    } catch (e) {\n      console.log(\"signature declined!\", e);\n    } // login\n\n\n    if (signature) {\n      const data = {\n        web3_address: address,\n        signature: signature\n      }; // console.log(data);\n      // get token , is first_login\n\n      axios.post(api_host + \"/user_svc/web3_login/\", data).then(response => {\n        if (response.status == 200) {\n          console.log(response.data); // set access token\n\n          let access_token = null;\n\n          if (response.data.token) {\n            access_token = \"token \" + response.data.token;\n          }\n\n          setAccessToken(access_token);\n          setUser_obj(response.data.data);\n          setWeb3signer(signer);\n          window.sessionStorage.setItem(\"user_obj\", JSON.stringify(response.data.data));\n          window.sessionStorage.setItem(\"access_token\", access_token); // console.log(\"login successful\");\n        } else {\n          alert(\"login failed try again!\");\n        }\n      }).catch(err => {\n        // console.log(err);\n        alert(\"login failed\");\n      });\n      ;\n    } else {\n      alert(\"signature declined!\");\n    }\n  }\n\n  function logout() {\n    setUser_obj(null);\n    setAccessToken(null);\n    setWeb3signer(null);\n    window.sessionStorage.removeItem(\"user_obj\");\n    window.sessionStorage.removeItem(\"access_token\"); // remove access token\n  }\n\n  async function onAccountChange(accounts) {\n    logout(); // const signer = await setupWallet();\n    // await login(signer);\n  }\n\n  async function onNetworkChange(chainId) {\n    console.log(\"chainChanged\", chainId);\n\n    if (chainId != '0x539') {\n      alert(\"network not supported!\"); // try {\n      //   // check if the chain to connect to is installed\n      //   await window.ethereum.request({\n      //     method: 'wallet_switchEthereumChain',\n      //     params: [{ chainId: '0x539' }], // chainId must be in hexadecimal numbers\n      //   });\n      // } catch (error) {\n      //   // This error code indicates that the chain has not been added to MetaMask\n      //   // if it is not, then install it into the user MetaMask\n      //   if (error.code === 4902) {\n      //     try {\n      //       await window.ethereum.request({\n      //         method: 'wallet_addEthereumChain',\n      //         params: [\n      //           {\n      //             chainId: '0x539',\n      //             rpcUrl: 'http://149.28.175.112:8545',\n      //           },\n      //         ],\n      //       });\n      //     } catch (addError) {\n      //       console.error(addError);\n      //     }\n      //   }\n      //   console.error(error);\n      // }\n    }\n  }\n\n  async function setupWallet() {\n    const web3Modal = new Web3Modal({\n      network: \"mainnet\",\n      cacheProvider: true\n    });\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    connection.on(\"accountsChanged\", accounts => {\n      onAccountChange(accounts);\n    });\n    connection.on(\"chainChanged\", chainId => {\n      onNetworkChange(chainId);\n    }); // // Subscribe to provider connection\n    // connection.on(\"connect\", (info) => {\n    //   console.log(\"connected\",info);\n    // });\n    // // Subscribe to provider disconnection\n    // connection.on(\"disconnect\",(error) => {\n    //   console.log(\"disconnect\",error);\n    // });\n\n    const signer = provider.getSigner();\n    return signer;\n  }\n\n  async function ConnectWalletHandler(props) {\n    if (typeof window.ethereum !== \"undefined\") {\n      // console.log(\"connect wallet cicked\");\n      const signer = await setupWallet();\n      login(signer);\n    } else {\n      alert(\"metamask not installed!\");\n    }\n  }\n\n  async function LoginCheckSession() {\n    const user_obj = window.sessionStorage.getItem(\"user_obj\") ? JSON.parse(window.sessionStorage.getItem(\"user_obj\")) : null;\n    const access_token = window.sessionStorage.getItem(\"access_token\");\n    const signer = await setupWallet();\n    const address = await signer.getAddress(); // console.log(user_obj,address);\n\n    if (user_obj && access_token) {\n      if (user_obj.web3_address == address) {\n        setAccessToken(access_token);\n        setUser_obj(user_obj);\n        setWeb3signer(signer);\n      } else {\n        logout();\n      }\n    } else {\n      logout();\n    }\n  }\n\n  const context = {\n    access_token: accessToken,\n    user_obj: user_obj,\n    connectWallet: ConnectWalletHandler,\n    signer: web3signer,\n    loginCheck: LoginCheckSession,\n    logout: logout\n  };\n  return /*#__PURE__*/_jsxDEV(AccountInfoContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AccountInfoContextProvider, \"tNaCg4GS3kjafARoky402QEBI88=\");\n\n_c = AccountInfoContextProvider;\nexport default AccountInfoContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountInfoContextProvider\");","map":{"version":3,"names":["createContext","useState","Web3Modal","ethers","axios","api_host","AccountInfoContext","access_token","user_obj","connectWallet","signer","loginCheck","logout","AccountInfoContextProvider","props","accessToken","setAccessToken","setUser_obj","web3signer","setWeb3signer","login","address","getAddress","meta","get","signature","signMessage","data","captcha","e","console","log","web3_address","post","then","response","status","token","window","sessionStorage","setItem","JSON","stringify","alert","catch","err","removeItem","onAccountChange","accounts","onNetworkChange","chainId","setupWallet","web3Modal","network","cacheProvider","connection","connect","provider","providers","Web3Provider","on","getSigner","ConnectWalletHandler","ethereum","LoginCheckSession","getItem","parse","context","children"],"sources":["/home/siyamak/Documents/MetaMask-Login-Python/frontend/src/components/ctx/account-context.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\n\nconst api_host = \"http://localhost:8000\";\n\nconst AccountInfoContext = createContext({\n    access_token: null,\n    user_obj: null,\n    connectWallet: () => {},\n    signer: null,\n    loginCheck: () => {},\n    logout: () => {},\n  });\n  \n  export function AccountInfoContextProvider(props) {\n    const [accessToken, setAccessToken] = useState(null);\n    const [user_obj, setUser_obj] = useState(null);\n    const [web3signer, setWeb3signer] = useState(null);\n  \n    async function login(signer) {\n      const address = await signer.getAddress();\n      // get nounce for this user\n      const meta = await axios.get(api_host + \"/user_svc/get_captcha/?web3_address=\" + address); //http://127.0.0.1:8000/user_svc/get_captcha/?web3_address=xyz\n  \n      // ask for sign\n      let signature = null;\n      try{\n        signature = await signer.signMessage(meta.data.data.captcha);\n      }catch(e){\n        console.log(\"signature declined!\",e)\n      }\n      \n      // login\n      if(signature){\n        const data = {\n          web3_address: address,\n          signature: signature,\n        };\n        // console.log(data);\n        // get token , is first_login\n        axios.post(api_host + \"/user_svc/web3_login/\", data).then((response) => {\n          if(response.status==200){\n            console.log(response.data);\n            // set access token\n            let access_token = null\n            if(response.data.token){\n              access_token = \"token \"+response.data.token\n            }\n            \n            setAccessToken(access_token);\n            setUser_obj(response.data.data);\n            setWeb3signer(signer);\n            window.sessionStorage.setItem(\"user_obj\", JSON.stringify(response.data.data));\n            window.sessionStorage.setItem(\"access_token\", access_token);\n            // console.log(\"login successful\");\n          }else{\n            alert(\"login failed try again!\")\n          }\n        }).catch((err)=>{\n            // console.log(err);\n            alert(\"login failed\");\n        });;\n        \n      }else{\n        alert(\"signature declined!\")\n      }\n      \n    }\n  \n    function logout() {\n      setUser_obj(null);\n      setAccessToken(null);\n      setWeb3signer(null);\n      window.sessionStorage.removeItem(\"user_obj\");\n      window.sessionStorage.removeItem(\"access_token\");\n      // remove access token\n    }\n    async function onAccountChange(accounts) {\n      logout();\n      // const signer = await setupWallet();\n      // await login(signer);\n    }\n  \n    async function onNetworkChange(chainId) {\n      console.log(\"chainChanged\",chainId);\n      if(chainId !='0x539'){\n        alert(\"network not supported!\")\n        // try {\n        //   // check if the chain to connect to is installed\n        //   await window.ethereum.request({\n        //     method: 'wallet_switchEthereumChain',\n        //     params: [{ chainId: '0x539' }], // chainId must be in hexadecimal numbers\n        //   });\n        // } catch (error) {\n        //   // This error code indicates that the chain has not been added to MetaMask\n        //   // if it is not, then install it into the user MetaMask\n        //   if (error.code === 4902) {\n        //     try {\n        //       await window.ethereum.request({\n        //         method: 'wallet_addEthereumChain',\n        //         params: [\n        //           {\n        //             chainId: '0x539',\n        //             rpcUrl: 'http://149.28.175.112:8545',\n        //           },\n        //         ],\n        //       });\n        //     } catch (addError) {\n        //       console.error(addError);\n        //     }\n        //   }\n        //   console.error(error);\n        // }\n      }\n    }\n  \n    async function setupWallet() {\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\",\n        cacheProvider: true,\n      });\n      const connection = await web3Modal.connect();\n      const provider = new ethers.providers.Web3Provider(connection);\n  \n      connection.on(\"accountsChanged\", (accounts) => {\n        onAccountChange(accounts);\n      });\n  \n      connection.on(\"chainChanged\", (chainId) => {\n        onNetworkChange(chainId)\n      });\n      \n      // // Subscribe to provider connection\n      // connection.on(\"connect\", (info) => {\n      //   console.log(\"connected\",info);\n      // });\n      \n      // // Subscribe to provider disconnection\n      // connection.on(\"disconnect\",(error) => {\n      //   console.log(\"disconnect\",error);\n      // });\n  \n      const signer = provider.getSigner();\n      return signer;\n    }\n  \n    async function ConnectWalletHandler(props) {\n      if (typeof window.ethereum !== \"undefined\") {\n        // console.log(\"connect wallet cicked\");\n        const signer = await setupWallet();\n        login(signer);\n      }\n      else{\n        alert(\"metamask not installed!\");\n      }\n    }\n  \n    async function LoginCheckSession() {\n      const user_obj = window.sessionStorage.getItem(\"user_obj\")?JSON.parse(window.sessionStorage.getItem(\"user_obj\")):null;\n      const access_token = window.sessionStorage.getItem(\"access_token\");\n  \n      const signer = await setupWallet();\n      const address = await signer.getAddress();\n  \n      // console.log(user_obj,address);\n      if (user_obj && access_token) {\n          if (user_obj.web3_address == address){\n              setAccessToken(access_token);\n              setUser_obj(user_obj);\n              setWeb3signer(signer);\n          }else{\n              logout()\n          }\n        \n      } else {\n        logout();\n      }\n    }\n  \n    const context = {\n      access_token: accessToken,\n      user_obj: user_obj,\n      connectWallet: ConnectWalletHandler,\n      signer: web3signer,\n      loginCheck: LoginCheckSession,\n      logout: logout,\n    };\n    return (\n      <AccountInfoContext.Provider value={context}>\n        {props.children}\n      </AccountInfoContext.Provider>\n    );\n  }\n  \n  export default AccountInfoContext;"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,MAAMC,kBAAkB,gBAAGN,aAAa,CAAC;EACrCO,YAAY,EAAE,IADuB;EAErCC,QAAQ,EAAE,IAF2B;EAGrCC,aAAa,EAAE,MAAM,CAAE,CAHc;EAIrCC,MAAM,EAAE,IAJ6B;EAKrCC,UAAU,EAAE,MAAM,CAAE,CALiB;EAMrCC,MAAM,EAAE,MAAM,CAAE;AANqB,CAAD,CAAxC;AASE,OAAO,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;EAAA;;EAChD,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACO,QAAD,EAAWS,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,IAAD,CAA5C;;EAEA,eAAemB,KAAf,CAAqBV,MAArB,EAA6B;IAC3B,MAAMW,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAP,EAAtB,CAD2B,CAE3B;;IACA,MAAMC,IAAI,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUnB,QAAQ,GAAG,sCAAX,GAAoDgB,OAA9D,CAAnB,CAH2B,CAGgE;IAE3F;;IACA,IAAII,SAAS,GAAG,IAAhB;;IACA,IAAG;MACDA,SAAS,GAAG,MAAMf,MAAM,CAACgB,WAAP,CAAmBH,IAAI,CAACI,IAAL,CAAUA,IAAV,CAAeC,OAAlC,CAAlB;IACD,CAFD,CAEC,OAAMC,CAAN,EAAQ;MACPC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,CAAlC;IACD,CAX0B,CAa3B;;;IACA,IAAGJ,SAAH,EAAa;MACX,MAAME,IAAI,GAAG;QACXK,YAAY,EAAEX,OADH;QAEXI,SAAS,EAAEA;MAFA,CAAb,CADW,CAKX;MACA;;MACArB,KAAK,CAAC6B,IAAN,CAAW5B,QAAQ,GAAG,uBAAtB,EAA+CsB,IAA/C,EAAqDO,IAArD,CAA2DC,QAAD,IAAc;QACtE,IAAGA,QAAQ,CAACC,MAAT,IAAiB,GAApB,EAAwB;UACtBN,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACR,IAArB,EADsB,CAEtB;;UACA,IAAIpB,YAAY,GAAG,IAAnB;;UACA,IAAG4B,QAAQ,CAACR,IAAT,CAAcU,KAAjB,EAAuB;YACrB9B,YAAY,GAAG,WAAS4B,QAAQ,CAACR,IAAT,CAAcU,KAAtC;UACD;;UAEDrB,cAAc,CAACT,YAAD,CAAd;UACAU,WAAW,CAACkB,QAAQ,CAACR,IAAT,CAAcA,IAAf,CAAX;UACAR,aAAa,CAACT,MAAD,CAAb;UACA4B,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,EAA0CC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACR,IAAT,CAAcA,IAA7B,CAA1C;UACAW,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,cAA9B,EAA8CjC,YAA9C,EAZsB,CAatB;QACD,CAdD,MAcK;UACHoC,KAAK,CAAC,yBAAD,CAAL;QACD;MACF,CAlBD,EAkBGC,KAlBH,CAkBUC,GAAD,IAAO;QACZ;QACAF,KAAK,CAAC,cAAD,CAAL;MACH,CArBD;MAqBG;IAEJ,CA9BD,MA8BK;MACHA,KAAK,CAAC,qBAAD,CAAL;IACD;EAEF;;EAED,SAAS/B,MAAT,GAAkB;IAChBK,WAAW,CAAC,IAAD,CAAX;IACAD,cAAc,CAAC,IAAD,CAAd;IACAG,aAAa,CAAC,IAAD,CAAb;IACAmB,MAAM,CAACC,cAAP,CAAsBO,UAAtB,CAAiC,UAAjC;IACAR,MAAM,CAACC,cAAP,CAAsBO,UAAtB,CAAiC,cAAjC,EALgB,CAMhB;EACD;;EACD,eAAeC,eAAf,CAA+BC,QAA/B,EAAyC;IACvCpC,MAAM,GADiC,CAEvC;IACA;EACD;;EAED,eAAeqC,eAAf,CAA+BC,OAA/B,EAAwC;IACtCpB,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BmB,OAA3B;;IACA,IAAGA,OAAO,IAAG,OAAb,EAAqB;MACnBP,KAAK,CAAC,wBAAD,CAAL,CADmB,CAEnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD;EACF;;EAED,eAAeQ,WAAf,GAA6B;IAC3B,MAAMC,SAAS,GAAG,IAAIlD,SAAJ,CAAc;MAC9BmD,OAAO,EAAE,SADqB;MAE9BC,aAAa,EAAE;IAFe,CAAd,CAAlB;IAIA,MAAMC,UAAU,GAAG,MAAMH,SAAS,CAACI,OAAV,EAAzB;IACA,MAAMC,QAAQ,GAAG,IAAItD,MAAM,CAACuD,SAAP,CAAiBC,YAArB,CAAkCJ,UAAlC,CAAjB;IAEAA,UAAU,CAACK,EAAX,CAAc,iBAAd,EAAkCZ,QAAD,IAAc;MAC7CD,eAAe,CAACC,QAAD,CAAf;IACD,CAFD;IAIAO,UAAU,CAACK,EAAX,CAAc,cAAd,EAA+BV,OAAD,IAAa;MACzCD,eAAe,CAACC,OAAD,CAAf;IACD,CAFD,EAZ2B,CAgB3B;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;;IAEA,MAAMxC,MAAM,GAAG+C,QAAQ,CAACI,SAAT,EAAf;IACA,OAAOnD,MAAP;EACD;;EAED,eAAeoD,oBAAf,CAAoChD,KAApC,EAA2C;IACzC,IAAI,OAAOwB,MAAM,CAACyB,QAAd,KAA2B,WAA/B,EAA4C;MAC1C;MACA,MAAMrD,MAAM,GAAG,MAAMyC,WAAW,EAAhC;MACA/B,KAAK,CAACV,MAAD,CAAL;IACD,CAJD,MAKI;MACFiC,KAAK,CAAC,yBAAD,CAAL;IACD;EACF;;EAED,eAAeqB,iBAAf,GAAmC;IACjC,MAAMxD,QAAQ,GAAG8B,MAAM,CAACC,cAAP,CAAsB0B,OAAtB,CAA8B,UAA9B,IAA0CxB,IAAI,CAACyB,KAAL,CAAW5B,MAAM,CAACC,cAAP,CAAsB0B,OAAtB,CAA8B,UAA9B,CAAX,CAA1C,GAAgG,IAAjH;IACA,MAAM1D,YAAY,GAAG+B,MAAM,CAACC,cAAP,CAAsB0B,OAAtB,CAA8B,cAA9B,CAArB;IAEA,MAAMvD,MAAM,GAAG,MAAMyC,WAAW,EAAhC;IACA,MAAM9B,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAP,EAAtB,CALiC,CAOjC;;IACA,IAAId,QAAQ,IAAID,YAAhB,EAA8B;MAC1B,IAAIC,QAAQ,CAACwB,YAAT,IAAyBX,OAA7B,EAAqC;QACjCL,cAAc,CAACT,YAAD,CAAd;QACAU,WAAW,CAACT,QAAD,CAAX;QACAW,aAAa,CAACT,MAAD,CAAb;MACH,CAJD,MAIK;QACDE,MAAM;MACT;IAEJ,CATD,MASO;MACLA,MAAM;IACP;EACF;;EAED,MAAMuD,OAAO,GAAG;IACd5D,YAAY,EAAEQ,WADA;IAEdP,QAAQ,EAAEA,QAFI;IAGdC,aAAa,EAAEqD,oBAHD;IAIdpD,MAAM,EAAEQ,UAJM;IAKdP,UAAU,EAAEqD,iBALE;IAMdpD,MAAM,EAAEA;EANM,CAAhB;EAQA,oBACE,QAAC,kBAAD,CAAoB,QAApB;IAA6B,KAAK,EAAEuD,OAApC;IAAA,UACGrD,KAAK,CAACsD;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAlLevD,0B;;KAAAA,0B;AAoLhB,eAAeP,kBAAf"},"metadata":{},"sourceType":"module"}